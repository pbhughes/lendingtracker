@using BlazorApplicationInsights

@inject ILogger<App> _logger
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage


<ApplicationInsightsInit IsWasmStandalone="true" />
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @{
                        _logger.LogWarning("Unauthenticated");
                    }
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {

                        <RedirectToLogin />
                    }
                    else
                    {
                        <p role="alert">You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //set the user
        Uri url = new Uri(Navigation.Uri.ToString());
        if (url.AbsolutePath == "/" || url.AbsolutePath == "")
            Navigation.NavigateTo("/home");

        await base.OnInitializedAsync();
    }
}