@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.RegularExpressions
@using MudBlazor

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<AuthorizeView>
    <Authorized>

        <MudHidden BreakPoint="Breakpoint.MdAndDown">
            Hello, @GetEmail(context)
            <MudButton OnClick="BeginLogout" Color="Color.Secondary">Log Out</MudButton>
        </MudHidden>

        <MudHidden BreakPoint="Breakpoint.LgAndUp">

            <MudButton OnClick="BeginLogout" Color="Color.Secondary">Log Out</MudButton>
        </MudHidden>
        <MudIconButton Icon="@Icons.Material.Outlined.AccountCircle" title="Profile" aria-label="Profile" Color="@Color.Default" OnClick="ShowProfileData"></MudIconButton>

        @if(_showProfileData){
            <LendingView.Components.CapturePhone Close="Close"></LendingView.Components.CapturePhone>
        }


    </Authorized>
    <NotAuthorized>
        <MudLink Color="Color.Secondary" Href="authentication/login">Login / Register</MudLink>
    </NotAuthorized>
</AuthorizeView>

@code{
    private bool _showProfileData = false;

    private void ShowProfileData(){
        _showProfileData = !_showProfileData;
    }
    private async void BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private string GetEmail(AuthenticationState context){

        string email = string.Empty;
        string emailPattern = @"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}";

        var firstEmail = context.User.Claims.First(n => n.Type == "emails").Value;
        Console.WriteLine(firstEmail);

        Match match = Regex.Match(firstEmail, emailPattern);

        if(match.Success)
        {
            email = match.Value;
        }
        else{
            email = "User";
        }

        return email.ToString();
    }

    private async void Close(){
        _showProfileData = false;
    }


}
