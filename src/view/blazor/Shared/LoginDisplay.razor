@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.RegularExpressions

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<AuthorizeView>
    <Authorized>
        Hello, @GetEmail(context)
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private string GetEmail(AuthenticationState context){

        string email = string.Empty;
        string emailPattern = @"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}";

        var firstEmail = context.User.Claims.First(n => n.Type == "emails").Value;
        Console.WriteLine(firstEmail);

        Match match = Regex.Match(firstEmail, emailPattern);

        if(match.Success)
        {
            email = match.Value;
        }
        else{
            email = "User";
        }

        return email.ToString();
    }


}
