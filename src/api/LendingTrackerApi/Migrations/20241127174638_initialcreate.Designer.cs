// <auto-generated />
using System;
using LendingTrackerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LendingTrackerApi.Migrations
{
    [DbContext(typeof(LendingTrackerContext))]
    [Migration("20241127174638_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LendingTrackerApi.Models.Borrower", b =>
                {
                    b.Property<Guid>("BorrowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BorrowerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BorrowerSms")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool?>("IsEligible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BorrowerId")
                        .HasName("PK__Borrower__568EDB576270152D");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "BorrowerSms" }, "UQ__Borrower__0E4EE86AE3B83218")
                        .IsUnique();

                    b.HasIndex(new[] { "BorrowerEmail" }, "UQ__Borrower__14F16AF6B87CB05D")
                        .IsUnique();

                    b.ToTable("Borrowers");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId")
                        .HasName("PK__Items__727E838BC5CFABC7");

                    b.HasIndex("OwnerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime>("BorrowedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("BorrowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<Guid>("LenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReturnedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6B92A192EE");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LenderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C829177A8");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105344616AE11")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Borrower", b =>
                {
                    b.HasOne("LendingTrackerApi.Models.User", "User")
                        .WithMany("Borrowers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Borrowers__UserI__3E52440B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Item", b =>
                {
                    b.HasOne("LendingTrackerApi.Models.User", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Items__OwnerId__4316F928");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Transaction", b =>
                {
                    b.HasOne("LendingTrackerApi.Models.Borrower", "Borrower")
                        .WithMany("Transactions")
                        .HasForeignKey("BorrowerId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Borro__47DBAE45");

                    b.HasOne("LendingTrackerApi.Models.Item", "Item")
                        .WithMany("Transactions")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__ItemI__48CFD27E");

                    b.HasOne("LendingTrackerApi.Models.User", "Lender")
                        .WithMany("Transactions")
                        .HasForeignKey("LenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Lende__46E78A0C");

                    b.Navigation("Borrower");

                    b.Navigation("Item");

                    b.Navigation("Lender");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Borrower", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.Item", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LendingTrackerApi.Models.User", b =>
                {
                    b.Navigation("Borrowers");

                    b.Navigation("Items");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
